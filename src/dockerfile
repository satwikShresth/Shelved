# Multi-stage build for compilation
FROM denoland/deno:alpine AS builder

# Set working directory
WORKDIR /build

# Copy dependency files first
COPY deno.* ./

# Copy source code
COPY . .

# Compile the application into a single binary
# Replace 'app.js' with your main entry point file
RUN deno compile --allow-all --output=app app.js

# Runtime stage with minimal alpine image
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache libstdc++ libgcc

# Create app directory
WORKDIR /app

# Copy the compiled binary from builder stage
COPY --from=builder /build/app ./app

# Copy other necessary files (views, db, etc.)
COPY --from=builder /build/views ./views
COPY --from=builder /build/db ./db

# Expose port
EXPOSE 3000

# Run the compiled binary directly
CMD ["./app"]
